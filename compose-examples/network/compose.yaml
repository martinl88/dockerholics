services:
  #
  # Proxymanager - Nginx Proxy Manager
  #
  proxymanager:
    container_name: proxymanager
    image: jc21/nginx-proxy-manager
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      DB_MYSQL_HOST: 'proxymanagerdb'
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: $NPMUSER
      DB_MYSQL_PASSWORD: $NPMPSW
      DB_MYSQL_NAME: 'npm'
    ports:
      - 880:80 
      - 881:81
      - 843:443 
    volumes:
      - $DOCKER_PATH/proxymanager/data:/data
      - $DOCKER_PATH/proxymanager/letsencrypt:/etc/letsencrypt
    restart: always
    depends_on:
      proxymanagerdb:
        condition: service_healthy

  #
  # Proxymanagerdb - MariaDB database for Nginx Proxy Manager
  #      
  proxymanagerdb:
    container_name: proxymanagerdb
    image: ghcr.io/linuxserver/mariadb
    environment:
      MYSQL_ROOT_PASSWORD: $NPMROOT
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: $NPMUSER
      MYSQL_PASSWORD: $NPMPSW
    volumes:
      - $DOCKER_PATH/proxymanagerdb:/config
    restart: always
    labels:
      - autoheal=true
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--silent"] 
      start_period: 240s
      timeout: 10s
      interval: 5s
      retries: 3

  #
  # vpn - openVPN client container
  #
  vpn:
    devices:
      - /dev/net/tun
    restart: unless-stopped
    container_name: vpn
    #open any ports for containers which will use this vpn network
    ports:
      - 7881:6881
      - 9991:8080
    dns:
      - 1.1.1.1
    image: dperson/openvpn-client
    labels:
      - autoheal=true
    security_opt:
      - label:disable
    cap_add:
      - NET_ADMIN
    stdin_open: true
    tty: true
    volumes:
      - $DOCKER_PATH/openvpn:/vpn
    command: -f ""

  #
  # librespeed - internal speed test host to lan device
  #
  librespeed:
    image: linuxserver/librespeed
    container_name: librespeed
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - PASSWORD=#LIBREPSW
    volumes:
      - $DOCKER_PATH/librespeed:/config
    ports:
      - 8383:80
    restart: unless-stopped

  #
  # Pi-hole with Unbound
  #
  pihole:
    container_name: pihole
    image: cbcrowe/pihole-unbound:latest
    hostname: ${HOSTNAME}
    domainname: ${LAN_DOMAIN_NAME}
    cap_add:
      - NET_ADMIN
    dns:
      - 127.0.0.1
      - 1.1.1.1
    ports:
      - 6443:443/tcp
      - 53:53/tcp
      - 53:53/udp
      - 80:80/tcp
      - 22/tcp # Uncomment to enable SSH
    environment:
      ServerIP: $PH_SVR_IP
      TZ: $TZ
      WEBPASSWORD: $PH_PSW
      REV_SERVER: ${REV_SERVER}
      REV_SERVER_TARGET: ${REV_SERVER_TARGET}
      REV_SERVER_DOMAIN: ${REV_SERVER_DOMAIN}
      REV_SERVER_CIDR: ${REV_SERVER_CIDR}
      DNS1: 127.0.0.1#5335 # Hardcoded to our Unbound server
      DNS2: 127.0.0.1#5335 # Hardcoded to our Unbound server
      DNSSEC: "true" # Enable DNSSEC
      TEMPERATUREUNIT: c
      ADMIN_EMAIL: $GM_USER
    volumes:
      - '$DOCKER_PATH/pihole/etc-pihole/:/etc/pihole'
      - '$DOCKER_PATH/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d'
    labels: 
      autoheal: 'true'
    healthcheck:
      test: curl -fSs http://127.0.0.1:80 || exit 1
      start_period: 15s
      timeout: 5s
      interval: 15s
      retries: 3
    restart: unless-stopped

  #
  # Orbital-sync 
  #
  orbital-sync:
    container_name: orbital-sync
    image: mattwebbio/orbital-sync:1
    environment:
      PRIMARY_HOST_BASE_URL: $PRIMARY_HOST_BASE_URL
      PRIMARY_HOST_PASSWORD: PRIMARY_HOST_PASSWORD
      SECONDARY_HOST_1_BASE_URL: $SECONDARY_HOST_1_BASE_URL
      SECONDARY_HOST_1_PASSWORD: $SECONDARY_HOST_1_PASSWORD
      SYNC_WHITELIST: 'true'
      SYNC_BLACKLIST: 'true'
      SYNC_REGEXLIST: 'true'
      SYNC_ADLIST: 'true'
      SYNC_CLIENTS: 'true'
      SYNC_GROUP: 'true'
#      SYNC_STATICDHCPLEASES: 'true'
      SYNC_LOCALDNSRECORDS: 'true'
      SYNC_LOCALCNAMERECORDS: 'true'
      SYNC_FLUSHTABLES: 'true'
      TZ: $TIME_ZONE
      INTERVAL_MINUTES: 30
    restart: unless-stopped